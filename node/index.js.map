{"version":3,"sources":["../src/index.js"],"names":["genUID","a","Math","random","toString","replace","ExtendableError","Error","constructor","message","name","captureStackTrace","stack","AwaitedIOError","msg","AwaitedIO","socket","opts","ctx","namespace","middleware","calls","local","remote","debug","o","Object","keys","hasOwnProperty","on","chain","filter","call","id","f","response","r","register","use","fn","push","index","next","err","length","error","emit","callback","handler","args","registerAPI","apiObj","Promise","update","forEach","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["\n// This awesome function comes from: https://gist.github.com/jed/982883\n// Returns a random v4 UUID of the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\nfunction genUID(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,genUID)};\n\nclass ExtendableError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(this, this.constructor);\n    } else { \n      this.stack = (new Error(message)).stack; \n    }\n  }\n}\n\nclass AwaitedIOError extends ExtendableError {\n  constructor (msg, stack) {\n    super(msg);\n    if (stack)\n      this.stack = stack\n  }\n}\n\nclass AwaitedIO {\n\n  constructor (socket, opts = {}) {\n    // The socket.io instance\n    this.socket = socket;\n    // Context to be passed to all calls\n    this.ctx = {};\n    // The namespace for the calls\n    this.namespace = 'awaited.io'\n    // The actions chain to process incoming calls\n    this.middleware = [];\n    // The enqueued calls\n    this.calls = [];\n    // The local calls available\n    this.local = []\n    // The remote calls available\n    this.remote = {};\n    // Debug flag.\n    // If set to true any errors thrown by the exposed methods will\n    // be sent to the client. \n    // Errors returned by the middleware function are always sent\n    // to the client but if the debug flag is not set the stack\n    // trace will be stripped from the error \n    this.debug = false;\n    for (let o of Object.keys(opts))\n      if (opts.hasOwnProperty(o))\n        this[o] = opts[o];\n    // Register a listener for all the calls\n    socket.on(`__${this.namespace}_call__`, (msg) => {\n      this.chain(msg);\n    });\n    // Register a listener for all the returns\n    socket.on(`__${this.namespace}_return__`, (msg) => {\n      this.calls = this.calls.filter(call => {\n        if (msg.id === call.id) {\n          call.f(msg.response);\n        }\n      })\n    });\n    // Register a listener for all the errors\n    socket.on(`__${this.namespace}_error__`, (msg) => {\n      this.calls = this.calls.filter(call => {\n        if (msg.id === call.id) {\n          call.r(new AwaitedIOError(\n            msg.response.message,\n            msg.response.stack\n          ));\n        }\n      });\n    });\n    // Handle the internal call to update remote calls\n    this.register('_update', () => {\n      return this.local;\n    });\n  }\n\n  // Registers a middleware function for the incoming calls\n  use (fn) {\n    this.middleware.push(fn);\n    return this;\n  }\n\n  // Executes the middleware chain passing the message along\n  async chain (msg) {\n    let index = 0;\n    const next = async (err) => {\n      if (index < this.middleware.length && !err) {\n        index++;\n        await this.middleware[index-1](next, this.ctx, msg);\n      } else if (err) {\n        const error = {\n          message: err.message\n        }\n        if (this.debug)\n          error.stack = err.stack\n        this.socket.emit(`__${this.namespace}_error__`, error);\n      }\n    }\n    return next();\n  }\n  \n  // Constructs the middleware function to handle a call\n  callback (name, handler) {\n    return async (next, ctx, msg) => {\n      if (msg.name === name) {\n        try {\n          let response = await handler(ctx, ...msg.args);\n          let message = {\n            id: msg.id,\n            response\n          };\n          this.socket.emit(`__${this.namespace}_return__`, message);\n        } catch (err) {\n          if (debug)\n            return await next(err);\n          else\n            throw err;\n        }\n      }      \n      return await next();\n    }\n  }\n\n  // Registers a call to be remotely available\n  register (name, handler) {\n    this.local.push(name);\n    return this.use( this.callback(name, handler) );\n  }\n\n  // Registers a set of calls to be remotely available\n  registerAPI (apiObj) {\n    for (let name of Object.keys(apiObj)) {\n      if (apiObj.hasOwnProperty(name))\n        this.register(name, apiObj[name]);\n    }\n  }\n\n  // Makes a remote call\n  call (name, ...args) {\n    return new Promise((f, r)=> {\n      let id = genUID();\n      this.calls.push({ id, f, r });\n      this.socket.emit(`__${this.namespace}_call__`, { id, name, args })\n    });\n  }\n\n  // Updates the remote calls object\n  async update () {\n    // Get the remote calls names\n    let remote = await this.call('_update');\n    // Reset the remote object\n    this.remote = {};\n    // Fill the remote object with the calls wrappers\n    remote.forEach(name => {\n      this.remote[name] = async (...args) => {\n        return await this.call(name, ...args);\n      }\n    });\n    return this.remote;\n  }\n\n}\n\nmodule.exports = AwaitedIO;"]}