{"version":3,"sources":["../src/index.js"],"names":["genUID","a","Math","random","toString","replace","AwaitedIO","socket","opts","ctx","namespace","middleware","calls","local","remote","Object","keys","o","hasOwnProperty","on","msg","chain","filter","id","call","f","response","r","Error","register","fn","push","index","next","err","length","emit","message","name","handler","args","res","use","callback","Promise","forEach","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["\n// Generates a random unique identifier\nfunction genUID(a){return a?(a^Math.random()*16>>a/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,genUID)};\n\nclass AwaitedIO {\n\n  constructor (socket, opts = {}) {\n    // The socket.io instance\n    this.socket = socket;\n    // Context to be passed to all calls\n    this.ctx = {};\n    // The namespace for the calls\n    this.namespace = 'awaited.io'\n    // The actions chain to process incoming calls\n    this.middleware = [];\n    // The enqueued calls\n    this.calls = [];\n    // The local calls available\n    this.local = []\n    // The remote calls available\n    this.remote = {};\n    // Apply options\n    for (let o of Object.keys(opts))\n      if (opts.hasOwnProperty(o))\n        this[o] = opts[o];\n    // Register a listener for all the calls\n    socket.on(`__${this.namespace}_call__`, (msg) => {\n      this.chain(this.middleware, msg);\n    });\n    // Register a listener for all the returns\n    socket.on(`__${this.namespace}_return__`, (msg) => {\n      this.calls = this.calls.filter(call => {\n        if (msg.id === call.id) {\n          call.f(msg.response);\n        }\n      })\n    });\n    // Register a listener for all the errors\n    socket.on(`__${this.namespace}_error__`, (msg) => {\n      this.calls = this.calls.filter(call => {\n        if (msg.id === call.id) {\n          call.r(new Error(msg.response));\n        }\n      });\n    });\n    // Handle the internal call to update remote calls\n    this.register('_update', () => {\n      return this.local;\n    });\n  }\n\n  // Registers a middleware function for the incoming calls\n  use (fn) {\n    this.middleware.push(fn);\n    return this;\n  }\n\n  // Executes a middleware chain\n  async chain (middleware, msg) {\n    let index = 0;\n    const next = async (err) => {\n      if (index < this.middleware.length && !err) {\n        index++;\n        await this.middleware[index-1](next, this.ctx, msg);\n      } else if (err) {\n        this.socket.emit(`__${this.namespace}_error__`, err.message);\n      }\n    }\n    return next();\n  }\n  \n  // Constructs the middleware function to handle a call\n  callback (name, handler) {\n    return async (next, ctx, msg) => {\n      if (msg.name === name) {\n        let res = await handler(ctx, ...msg.args);\n        let message = {\n          id: msg.id,\n          response: res\n        };\n        this.socket.emit(`__${this.namespace}_return__`, message);\n      }      \n      return await next();\n    }\n  }\n\n  // Registers a call to be remotely available\n  register (name, handler) {\n    this.local.push(name);\n    return this.use( this.callback(name, handler) );\n  }\n\n  // Makes a remote call\n  call (name, ...args) {\n    return new Promise((f, r)=> {\n      let id = genUID();\n      this.calls.push({ id, f, r });\n      this.socket.emit(`__${this.namespace}_call__`, { id, name, args })\n    });\n  }\n\n  // Updates the remote calls object\n  async update () {\n    // Get the remote calls names\n    let remote = await this.call('_update');\n    // Reset the remote object\n    this.remote = {};\n    // Fill the remote object with the calls wrappers\n    remote.forEach(name => {\n      this.remote[name] = async (...args) => {\n        return await this.call(name, ...args);\n      }\n    });\n    return this.remote;\n  }\n\n}\n\nmodule.exports = AwaitedIO;"]}